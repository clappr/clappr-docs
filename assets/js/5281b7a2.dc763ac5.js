"use strict";(self.webpackChunkclappr_docs=self.webpackChunkclappr_docs||[]).push([[927],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(a),h=n,d=m["".concat(p,".").concat(h)]||m[h]||u[h]||o;return a?r.createElement(d,l(l({ref:t},s),{},{components:a})):r.createElement(d,l({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1527:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={},l="Architecture",i={unversionedId:"architecture",id:"architecture",title:"Architecture",description:"Clappr is an extensible, open-source, plugin-oriented, HTML5-first media player for web applications. It was designed around these main components:",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/docs/docs/architecture",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Supported Media Formats",permalink:"/docs/docs/supported_formats"},next:{title:"FAQ",permalink:"/docs/docs/faq"}},p={},c=[],s={toc:c};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"architecture"},"Architecture"),(0,n.kt)("p",null,"Clappr is an extensible, open-source, plugin-oriented, HTML5-first media player for web applications. It was designed around these main components:  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-core/blob/master/src/components/player/player.js"},"Player"),": Clappr's Public API and entry point for clients."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-core/blob/master/src/components/core/core.js"},"Core"),": The Player's Core. Almost all components are created and managed here. The Player usually communicates with other components through the Core."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-plugins/blob/master/src/plugins/media_control/media_control.js"},"MediaControl"),": The Media Control is the UI interface so the user can interact with the Player's Playback. It should work with any Playback (MP4, hls.js, shaka-player, etc.)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-core/blob/master/src/components/container/container.js"},"Container"),": A wrapper around the Playback. It can be seen as just a delegator, but it's also used to build plugins that are agnostic of the Playback's kind."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-core/blob/master/src/base/playback/playback.js"},"Playback"),": An abstraction that actually plays the media. It might use: ",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video"},(0,n.kt)("inlineCode",{parentName:"a"},"<video>")," tag"),".")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/wiki/clappr/clappr-docs/main_classes_picture.png",alt:"alt"})),(0,n.kt)("p",null,"You can create plugins around these abstractions. Here's the kinds of available plugins:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"CorePlugin"),": Accesses all the components of the Player (Ex: Getting User Statistics)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"UICorePlugin")," - Same as ",(0,n.kt)("strong",{parentName:"li"},"CorePlugin"),", but it's able to render UI elements. (Ex.: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-chromecast-plugin"},"Chromecast")," and ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tjenkinson/clappr-thumbnails-plugin"},"Thumbnails")," plugins)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ContainerPlugin"),": Accesses Playback info and is able to control it or change its behavior (Ex.: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-speech-control-plugin"},"Speech Control")," plugin)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"UIContainerPlugin"),": Same as ",(0,n.kt)("strong",{parentName:"li"},"ContainerPlugin"),", but it's able to render UI elements. (Ex.: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/watermark"},"Watermark")," plugin)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Playback"),": Although more of module than a plugin, you can provide a Playback for the Player (Ex.: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/thiagopnts/video-360"},"360-degrees playback"),", ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/dash-shaka-playback"},"shaka-player playback"),")."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MediaControl"),": Provides controls to the Player.")),(0,n.kt)("p",null,"To summarize Clappr is aiming to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Keep extensibility open:")," You can create an entire plugin in a different repository, you can disable it, you can create a new playback that is able to work with the old media control and existent plugins."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Use mainly events to communicate with components:")," which makes your program less coupling in your plugin level... you don't need to call a function, you can listen to events and trigger events."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Have a minimal footprint:")," You can add the plugins you need, for instance you don't need to load ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/clappr/clappr-chromecast-plugin"},"Chromecast")," when you don't need it.")))}u.isMDXComponent=!0}}]);